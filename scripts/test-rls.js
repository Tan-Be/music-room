#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è RLS –ø–æ–ª–∏—Ç–∏–∫
const { createClient } = require('@supabase/supabase-js')

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RLS –ø–æ–ª–∏—Ç–∏–∫...\n')

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseAnonKey) {
  console.log('‚ÑπÔ∏è  –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
  console.log('–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ .env.local —Ñ–∞–π–ª')
  console.log('–°–º. –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: docs/supabase-setup.md\n')
  console.log('‚úÖ –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è RLS –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è')
  process.exit(0)
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function testRLSPolicies() {
  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ profiles –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('–¢–µ—Å—Ç 1: –î–æ—Å—Ç—É–ø –∫ profiles –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏')
    const { data: profilesData, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .limit(1)

    if (profilesError && profilesError.code === '42501') {
      console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∏ RLS —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è profiles (–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω)')
    } else if (profilesData && profilesData.length === 0) {
      console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∏ RLS —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è profiles (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ—Å—Ç—É–ø–∞)')
    } else {
      console.log('‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è profiles')
    }

    // –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ rooms –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('\n–¢–µ—Å—Ç 2: –î–æ—Å—Ç—É–ø –∫ rooms –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏')
    const { data: roomsData, error: roomsError } = await supabase
      .from('rooms')
      .select('*')
      .limit(1)

    if (roomsError && roomsError.code === '42501') {
      console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∏ RLS —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è rooms (–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω)')
    } else if (roomsData) {
      console.log('‚ÑπÔ∏è  –î–æ—Å—Ç—É–ø –∫ rooms –≤–æ–∑–º–æ–∂–µ–Ω (–ø—É–±–ª–∏—á–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã)')
    } else {
      console.log('‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è rooms')
    }

    // –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ tracks –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('\n–¢–µ—Å—Ç 3: –î–æ—Å—Ç—É–ø –∫ tracks –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏')
    const { data: tracksData, error: tracksError } = await supabase
      .from('tracks')
      .select('*')
      .limit(1)

    if (tracksError && tracksError.code === '42501') {
      console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∏ RLS —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è tracks (–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω)')
    } else if (tracksData) {
      console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∏ RLS —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è tracks (–ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø)')
    } else {
      console.log('‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è tracks')
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RLS –ø–æ–ª–∏—Ç–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
    console.log('‚ÑπÔ∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ—Å—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ RLS –ø–æ–ª–∏—Ç–∏–∫:', error.message)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testRLSPolicies()